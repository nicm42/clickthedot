/* Colour palette: https://colorhunt.co/palette/118591 */

/* variables */
$lightColour: #f9f9f9;
$shapeColour: #ff7a8a;
//According to specs should use scale-color instead, but gulp-sass doesn't like it
$buttonColour: lighten(#113a5d, 20%);

/* basic set up */
body {
	background-color: $lightColour;
	height: 100%;
	text-align: center;
	font-family: 'Sunflower', sans-serif;
	font-size: 1em;
	color: #062743;
}

#instructions {
	grid-area: instructions;
	padding-top: 10px;
	padding-bottom: 10px;
}

#options {
	grid-area: options;
}
#shapes {
	margin: 2rem 0;
	padding: 2px;
	box-shadow: 0 1px 0 1px rgba(0,0,0,.04);
}

#container {
	grid-area: container;
	display: flex;
	justify-content: center;
	align-items: center;
	height: 300px; /* biggest dot when 3 times the size */
	min-width: 300px; /* biggest dot when 3 times the size */
	margin-top: 10px;
	margin-bottom: 10px;
	padding-left: 10px;
	padding-right: 10px;
}
.shape {
	position: relative;
}
#circle {
	border-radius: 50%;
	background-color: $shapeColour;
}
#square {
	border: none;
	border-radius: 0;
	background-color: $shapeColour;
}
#triangle {
	width: 0;
	height: 0;
	border: none;
	border-radius: 0;
	border-left-style: solid;
  border-left-color: transparent;
	border-right-style: solid;
  border-right-color: transparent;
	border-bottom-style: solid;
  border-bottom-color: $shapeColour;
	background-color: none;
}
.helper {
	display: none;
	border-style: solid;
	border-color: $lightColour;
	position: absolute;
}
#helpercircle {
	border: 2px solid $lightColour;
	border-radius: 50%;
}
#helpersquare {
	border: 2px solid $lightColour;
	border-radius: 0;
}
#helpertriangle {
	width: 0;
	height: 0;
	border: none;
	border-radius: 0;
	border-left-style: solid;
  border-left-color: transparent;
	border-right-style: solid;
  border-right-color: transparent;
	border-bottom-style: solid;
  border-bottom-color: $lightColour;
}
#helpertriangle2 {
	width: 0;
	height: 0;
	border: none;
	border-radius: 0;
	border-left-style: solid;
  border-left-color: transparent;
	border-right-style: solid;
  border-right-color: transparent;
	border-bottom-style: solid;
  border-bottom-color: $shapeColour;
}

#result {
	grid-area: result;
	padding-top: 10px;
	padding-bottom: 10px;
}

/* hide reset button until transition has finished */
#resetbutton {
	grid-area: reset;
	padding-top: 10px;
	padding-bottom: 10px;
}
#reset {
	visibility: hidden;
	cursor: pointer;
	background-color: $buttonColour;
	border: $buttonColour;
	color: $lightColour;
	padding: 0.5em 1.5em;
	border-radius: 2em;
	font-size: 0.9em;
}
#reset:hover {
	background-color: darken($buttonColour, 10%);
}
#reset:active {
	background-color: darken($buttonColour, 10%);
}

#highscores {
	grid-area: highscores;
	padding-top: 10px;
	padding-bottom: 10px;
}

@media (min-width: 600px) {
	body {
		display: grid;
		grid-template-areas:
											"instructions instructions"
											"options container"
											"highscores container"
											"result result"
											"reset reset";
		grid-template-columns: 1fr, 2fr;
	}
	#highscores {
		align-self: center;
	}
	#options {
		align-self: center;
	}
}

@media (min-width: 900px) {
	body {
		grid-template-areas:
											". instructions ."
											"options container highscores"
											". result ."
											". reset .";
		grid-template-columns: 1fr, 2fr, 1fr;
	}
}